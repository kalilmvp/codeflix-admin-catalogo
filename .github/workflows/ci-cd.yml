name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
      - 'master'
      - 'develop'
      - 'hotfix/**'
      - 'release/**'
      - 'modulos/**'

  # enable manual trigger through github actions interface
  workflow_dispatch:

env:
  IMAGE_NAME: kalilmvp/codeflix-admin-catalogo

jobs:
  # job to execute tests
  tests:
    name: Tests runner
    runs-on: ubuntu-latest

    # configure job steps
    steps:
      # 1 - checkout source code
      - uses: actions/checkout@v3
      # 2 - configure JDK
      - name: Set up JDK@14
        uses: actions/setup-java@v3
        with:
          java-version: '14'
          distribution: 'adopt'
      # 3 - configure JDK
      - name: Run application tests
        run: ./gradlew e2eTests --debug
  # job to build application
  build:
    name: Build Runner
    needs: tests
    runs-on: ubuntu-latest
    #configure steps
    steps:
      # 1 - checkout source code
      - uses: actions/checkout@v3
      # 2 - configure JDK
      - name: Set up JDK@17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      # 3 - validate gradle wrapper
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      # 4. build to generate final artifact
      - name: Build application
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build -x test
      # 5. Define variable branch name
      - name: Set BUILD_TAG
        run: |
          echo BUILD_TAG=$(echo ${{ github.head_ref || github.ref_name }} | sed "s,/,_,g")-${{ github.run_number }} >> $GITHUB_ENV
      # 6. Print BUILD_TAG
      - name: Print BUILD_TAG defined
        run: |
          echo "Branch     ---> ${{ github.head_ref || github.ref_name }}"
          echo "Run number ---> ${{ github.run_number }}"
          echo "Tag        ---> ${{ env.BUILD_TAG }}"
      # 7. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      # 8. Build & Deploy image
      - name: Build & push docker iamge
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: VERSION=${{ env.BUILD_TAG }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }}



